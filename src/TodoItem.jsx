// src/TodoItem.jsx
import React, { useState } from 'react';

function TodoItem({ todo, deleteTodo, toggleTodo, editTodo }) { // üîΩ ‡∏£‡∏±‡∏ö editTodo
  const [isEditing, setIsEditing] = useState(false);
  const [newText, setNewText] = useState(todo.text);

  const handleSave = () => {
    if (newText.trim()) {
      editTodo(todo.id, newText);
      setIsEditing(false);
    }
  };

  return (
    <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>
      {isEditing ? (
        // üîΩ UI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        <input
          type="text"
          value={newText}
          onChange={(e) => setNewText(e.target.value)}
          onBlur={handleSave} // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠ focus ‡∏´‡∏•‡∏∏‡∏î
          onKeyPress={(e) => e.key === 'Enter' && handleSave()} // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î Enter
          autoFocus // focus ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        />
      ) : (
        // UI ‡∏õ‡∏Å‡∏ï‡∏¥
        <span onClick={() => toggleTodo(todo.id)}>
          {todo.text}
        </span>
      )}

      <div>
        {isEditing ? (
          <button onClick={handleSave} className="save-btn">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
        ) : (
          <button onClick={() => setIsEditing(true)} className="edit-btn">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
        )}
        <button onClick={() => deleteTodo(todo.id)}>‡∏•‡∏ö</button>
      </div>
    </li>
  );
}

export default TodoItem;